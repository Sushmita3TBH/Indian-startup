# -*- coding: utf-8 -*-
"""Indian Startup.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/115WWXEOOwPNHvfFTZTK5kyBSEg7LF8ur
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer
from sklearn.ensemble import RandomForestRegressor
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

from google.colab import drive
drive.mount('/content/drive')

def readcsv(filepath,filename):
	import os
	os.chdir(filepath)
	file = pd.read_excel(filename)

	return file

filepath = "/content/drive/MyDrive/Day6.python"
filename = "startup_funding123.xlsx"

df = readcsv(filepath,filename)
print(df.head(5))

print("Frist 5 rows of the dataset")
df.head()

print("\nDataset Information")
df.info()

print("\nMissing values in each column")
df.isnull().sum()

df.columns

# fill Missing values
df['Industry_Vertical'] = df['Industry_Vertical'].fillna('others')
df['SubVertical'] = df['SubVertical'].fillna('Not Specified')
df['City_Location'] = df['City_Location'].fillna('Not Specified')
df['Investors_Name'] = df['Investors_Name'].fillna('Undisclosed')

# Convert data column to datation and extract year/month
df['Date'] = pd.to_datetime(df['Date'], errors='coerce')
df['Year'] = df['Date'].dt.year
df['Month'] = df['Date'].dt.month

df.Date

# Number of deals per year
plt.figure(figsize=(12, 6))
sns.countplot(x='Year', data=df)
plt.title('Number of funding Deals per Year')
plt.xlabel('Year')
plt.ylabel('Deal count')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Total funding per year
yearly_funding = df.groupby('Year')['Amount_In_INR'].sum().reset_index()
plt.figure(figsize=(12,6))
sns.lineplot(x='Year', y='Amount_In_INR', data=yearly_funding, marker = 'o')
plt.title('Total Funding Amount per Year')
plt.xlabel('Year')
plt.ylabel('Total Funding (INR)')
plt.grid(True)
plt.tight_layout()
plt.show()

#Top sectors by deal count
top_sectors = df['Industry_Vertical'].value_counts().head(10)
plt.figure(figsize=(12,6))
sns.barplot(x=top_sectors.values, y=top_sectors.index)
plt.title('Top 10 Sectors by Deal Count')
plt.xlabel('Deal Count')
plt.ylabel('Sector')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

#Top sectors by total funding
df['Industry_Vertical'] = df['Industry_Vertical'].replace('ECommerce', 'ecommerce')
sector_funding = df.groupby('Industry_Vertical')['Amount_In_INR'].sum().sort_values(ascending=False).head(10)
plt.figure(figsize=(12,6))
sns.barplot(x=sector_funding.values, y=sector_funding.index)
plt.title('Top 10 Funding Sectors by Total Funding Amount')
plt.xlabel('Total Funding (INR)')
plt.ylabel('Sector')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Split multiple investoes and count
investors_df = df[['StartupName','Investors_Name','Amount_In_INR']].copy()
investors_df['Investors_Name'] = investors_df['Investors_Name'].str.split(',')
investors_df = investors_df.explode('Investors_Name').dropna()
investors_df['Investors_Name'] = investors_df['Investors_Name'].str.strip().str.title()

investors_df

#Top investors by number of deals
top_investors_deals = investors_df['Investors_Name'].value_counts().head(10)
plt.figure(figsize=(12,6))
sns.barplot(x=top_investors_deals.values, y=top_investors_deals.index)
plt.title('Top 10 Investors by Number of Deals')
plt.xlabel('Number of Deals')
plt.ylabel('Investor')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

Investment_Type = df['InvestmentType'].value_counts().head(10)
plt.figure(figsize=(12,6))
sns.barplot(x=Investment_Type.values, y=Investment_Type.index)
plt.title('Top 10 Investment Types')
plt.xlabel('Number of Deals')
plt.ylabel('Investment Type')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

sector_stage = pd.crosstab(df['Industry_Vertical'], df['InvestmentType'])
sector_stage = sector_stage.loc[sector_stage.sum(axis=1).sort_values(ascending=False).head(10).index]

plt.figure(figsize=(12,6))
sns.heatmap(sector_stage,annot=True,fmt="d",cmap="YlGnBu")
plt.title("Sector vs Investment Type")

plt.show()

sns.histplot(df['Amount_In_INR'],bins=30, kde=True)
plt.title('Distribution of Funding Amounts')
plt.xlabel('Funding Amount (INR)')
plt.show()

sns.boxplot(x='Amount_In_INR', data=df)
plt.title('Boxplot of Funding Amounts')
plt.xlabel('Funding Amount (INR)' )
plt.show()

sector_yearly = df.groupby(['Industry_Vertical', 'Year'])['Amount_In_INR'].sum().unstack()
sector_growth = sector_yearly.pct_change().mean().sort_values(ascending=False).head(10)

plt.figure(figsize=(10,6))
sns.barplot(x=sector_growth.values *100, y=sector_growth.index)
plt.title('Top Sectors with Highest Average Annual Growth Rate')
plt.xlabel('Average  Growth Rate (%)')
plt.ylabel('Sector')
plt.show()

df.Investors_Name

investors_df = df[['StartupName','Investors_Name','Amount_In_INR']].copy()
investors_df['Investors_Name'] = investors_df['Investors_Name'].str.split(',')
investors_df = investors_df.explode('Investors_Name').dropna()
investors_df['Investors_Name'] = investors_df['Investors_Name'].str.strip().str.title()

def classify_investor(name):
  name = name.lower()
  if any(word in name for word in ['capital','venture','partners','fund','vc','labs']):
    return 'VC'
  elif any(word in name for word in ['angel','network']):
    return 'Angel'
  elif any(word in name for word in ['corp','limited','pvt','ltd','inc']):
    return 'corprate'
  else:
    return 'others'

investors_df['Investor_Type'] = investors_df['Investors_Name'].apply(classify_investor)
Investment_Type_counts = investors_df['Investor_Type'].value_counts()

plt.figure(figsize=(12,6))
sns.barplot(x=Investment_Type_counts.values, y=Investment_Type_counts.index)
plt.title('Top Investor Types')
plt.xlabel('Number of Deals')
plt.ylabel('Investment Type')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

investors_df = df[['StartupName','Investors_Name','Amount_In_INR']].copy()
investors_df['Investors_Name'] = investors_df['Investors_Name'].str.split(',')
investors_df = investors_df.explode('Investors_Name').dropna()
investors_df['Investors_Name'] = investors_df['Investors_Name'].str.strip().str.title()

# count how many times an investor invested in the same startup
investor_startup_counts = investors_df.groupby(['Investors_Name', 'StartupName']).size().reset_index(name='Count')
repeat_investors = investor_startup_counts[investor_startup_counts['Count']>1]

repeat_investors_summary = repeat_investors['Investors_Name'].value_counts().head(10)

plt.figure(figsize=(10,6))
sns.barplot(x=repeat_investors_summary.values, y=repeat_investors_summary.index)
plt.title('Top Investors by Number of Deals ')
plt.xlabel('Number of Deals')
plt.ylabel('Investor')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()
plt.xlabel

# Define stage categories
early_stage = ['Seed','Pre-Seed']
late_stage = ['Series A','Series B','Series C','Series D','Series E','Private Equity','Venture Debt','Debt Funding']
df['Funding_Stage'] = df['InvestmentType'].str.strip().str.title()
df['Funding_Stage'] = df['Funding_Stage'].apply(lambda x: 'Early Stage' if x in early_stage else ('Late Stage' if x in late_stage else x))

# plot
plt.figure(figsize=(10,6))
sns.countplot(x='Funding_Stage', data=df,order=df['Funding_Stage'].value_counts().index)
plt.title('Start Funding Stage Distribution')
plt.xlabel('Funding Stage')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.show()

sector_stage = pd.crosstab(df['Industry_Vertical'], df['InvestmentType'])
sector_stage = sector_stage.loc[sector_stage.sum(axis=1).sort_values(ascending=False).head(10).index]

sector_stage.plot(kind='bar', stacked=True, figsize=(12,6))
plt.title("Investment Type by Sector(Top 10 sectors)")
plt.xlabel("Sector")
plt.ylabel("DealCount")
plt.xticks(rotation=45)
plt.legend(title='Investment Type')
plt.show()